templates:
  ## Base Definitions #########################################################

  builder:
    artifact: "dist.tar.bz2"
    command:
      - "/bin/bash"
      - "-c"
      - "bin/checkout.sh && nss/automation/taskcluster/scripts/build.sh"
    env:
      NSS_ENABLE_TLS_1_3: 1
    treeherder:
      symbol: B
    subtasks:
      cert: true
      chains: true
      cipher: true
      crmf: true
      dbtests: true
      ec: true
      fips: true
      gtests: true
      libpkix: true
      lowhash: true
      merge: true
      ocsp: true
      pkits: true
      sdr: true
      smime: true
      ssl: true
      tools: true

  test_runner:
    command:
      - "/bin/bash"
      - "-c"
      - "bin/checkout.sh && nss/automation/taskcluster/scripts/run_tests.sh"

  memleak:
    extends: test_runner
    env:
      NSS_TESTS: "memleak"
    treeherder:
      groupSymbol: ML
      groupName: MemLeak tests

  ## Test Definitions #########################################################

  cert:
    name: "Cert tests"
    extends: test_runner
    env:
      NSS_TESTS: "cert"
    treeherder:
      symbol: Cert

  chains:
    name: "Chains tests"
    extends: test_runner
    env:
      NSS_TESTS: "chains"
    treeherder:
      symbol: Chains

  cipher:
    name: "Cipher tests"
    extends: test_runner
    env:
      NSS_TESTS: "cipher"
    treeherder:
      symbol: Cipher

  crmf:
    name: "CRMF tests"
    extends: test_runner
    env:
      NSS_TESTS: "crmf"
    treeherder:
      symbol: CRMF

  dbtests:
    name: "DB tests"
    extends: test_runner
    env:
      NSS_TESTS: "dbtests"
    treeherder:
      symbol: DB

  ec:
    name: "EC tests"
    extends: test_runner
    env:
      NSS_TESTS: "ec"
    treeherder:
      symbol: EC

  fips:
    name: "FIPS tests"
    extends: test_runner
    env:
      NSS_TESTS: "fips"
    treeherder:
      symbol: FIPS

  gtests:
    name: "GTests"
    extends: test_runner
    env:
      NSS_TESTS: "ssl_gtests gtests"
    treeherder:
      symbol: GTest

  libpkix:
    name: "libpkix tests"
    extends: test_runner
    env:
      NSS_TESTS: "libpkix"
    treeherder:
      symbol: PKIX

  lowhash:
    name: "lowhash tests"
    extends: test_runner
    env:
      NSS_TESTS: "lowhash"
    treeherder:
      symbol: Lowhash

  memleak_server:
    name: "MemLeak tests (ssl_server)"
    extends: memleak
    env:
      NSS_MEMLEAK_TESTS: "ssl_server"
    treeherder:
      symbol: server

  memleak_client:
    name: "MemLeak tests (ssl_client)"
    extends: memleak
    env:
      NSS_MEMLEAK_TESTS: "ssl_client"
    treeherder:
      symbol: client

  memleak_chains:
    name: "MemLeak tests (chains)"
    extends: memleak
    env:
      NSS_MEMLEAK_TESTS: "chains"
    treeherder:
      symbol: chains

  memleak_ocsp:
    name: "MemLeak tests (ocsp)"
    extends: memleak
    env:
      NSS_MEMLEAK_TESTS: "ocsp"
    treeherder:
      symbol: ocsp

  merge:
    name: "Merge tests"
    extends: test_runner
    env:
      NSS_TESTS: "merge"
    treeherder:
      symbol: Merge

  ocsp:
    name: "OCSP tests"
    extends: test_runner
    env:
      NSS_TESTS: "ocsp"
    treeherder:
      symbol: OCSP

  pkits:
    name: "NIST PKITS tests"
    extends: test_runner
    env:
      NSS_TESTS: "pkits"
    treeherder:
      symbol: PKITS

  sdr:
    name: "SDR tests"
    extends: test_runner
    env:
      NSS_TESTS: "sdr"
    treeherder:
      symbol: SDR

  smime:
    name: "S/MIME tests"
    extends: test_runner
    env:
      NSS_TESTS: "smime"
    treeherder:
      symbol: SMIME

  ssl: # Update this when TLS v1.3 doesn't fail these anymore.
    name: "SSL tests"
    artifact: "dist.tar.bz2"
    command:
      - "/bin/bash"
      - "-c"
      - "bin/checkout.sh && nss/automation/taskcluster/scripts/build.sh"
    env:
      NSS_ENABLE_TLS_1_3: "" # Remove this.
      NSS_TESTS: "ssl"
    treeherder:
      groupSymbol: SSL
      groupName: SSL tests
    subtasks:
      ssl_standard: true
      ssl_pkix: true
      ssl_upgradedb: true
      ssl_sharedb: true

  ssl_standard:
    name: "SSL tests (standard)"
    extends: test_runner
    env:
      NSS_CYCLES: "standard"
    treeherder:
      symbol: "standard"
  ssl_pkix:
    name: "SSL tests (pkix)"
    extends: test_runner
    env:
      NSS_CYCLES: "pkix"
    treeherder:
      symbol: "pkix"
  ssl_upgradedb:
    name: "SSL tests (upgradedb)"
    extends: test_runner
    env:
      NSS_CYCLES: "upgradedb"
    treeherder:
      symbol: "upgradedb"
  ssl_sharedb:
    name: "SSL tests (sharedb)"
    extends: test_runner
    env:
      NSS_CYCLES: "sharedb"
    treeherder:
      symbol: "sharedb"

  tools:
    name: "Tools tests"
    extends: test_runner
    env:
      NSS_TESTS: "tools"
    treeherder:
      symbol: Tools

graph:
  build-32-debug:
    name: "Linux 32 (debug)"
    extends: builder
    treeherder:
      build:
        platform: linux32
      collection:
        debug: true

  build-32-opt:
    name: "Linux 32 (opt)"
    extends: builder
    env:
      BUILD_OPT: 1
    treeherder:
      build:
        platform: linux32
      collection:
        opt: true

  build-64-debug:
    name: "Linux 64 (debug)"
    extends: builder
    env:
      USE_64: 1
    treeherder:
      build:
        platform: linux64
      collection:
        debug: true
    subtasks:
      memleak_server: true
      memleak_client: true
      memleak_chains: true
      memleak_ocsp: true

  build-64-asan:
    name: "Linux 64 (ASan)"
    extends: builder
    env:
      USE_ASAN: 1
      USE_64: 1
    treeherder:
      build:
        platform: linux64
      collection:
        asan: true

  build-64-opt:
    name: "Linux 64 (opt)"
    extends: builder
    env:
      BUILD_OPT: 1
      USE_64: 1
    treeherder:
      build:
        platform: linux64
      collection:
        opt: true

# build-32-debug-asan-gcc6:
#   name: "Linux 32 (gcc6, debug, ASan)"
#   extends: builder
#   env:
#     USE_ASAN: 1
#     CCC: g++-6
#     CC: gcc-6

# build-32-opt-gcc6:
#   name: "Linux 32 (gcc6, opt)"
#   extends: builder
#   env:
#     BUILD_OPT: 1
#     CCC: g++-6
#     CC: gcc-6

# build-64-debug-asan-gcc6:
#   name: "Linux 64 (gcc6, debug, ASan)"
#   extends: builder
#   env:
#     USE_ASAN: 1
#     USE_64: 1
#     CCC: g++-6
#     CC: gcc-6

# build-64-opt-gcc6:
#   name: "Linux 64 (gcc6, opt)"
#   extends: builder
#   env:
#     BUILD_OPT: 1
#     USE_64: 1
#     CCC: g++-6
#     CC: gcc-6

  clang-format:
    name: "clang-format-3.8"
    command:
      - "/bin/bash"
      - "-c"
      - "bin/checkout.sh && nss/automation/taskcluster/scripts/run_clang_format.sh nss/lib/ssl"
    treeherder:
      symbol: clang-format
      build:
        platform: nss-tools
